<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TypeScript on baArt</title><link>https://baartch.github.io/tags/typescript/</link><description>Recent content in TypeScript on baArt</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 05 Mar 2021 19:23:33 +0100</lastBuildDate><atom:link href="https://baartch.github.io/tags/typescript/index.xml" rel="self" type="application/rss+xml"/><item><title>put a file on multiple S3 buckets asynchronous</title><link>https://baartch.github.io/posts/0006-asyncs3upload/</link><pubDate>Fri, 05 Mar 2021 19:23:33 +0100</pubDate><guid>https://baartch.github.io/posts/0006-asyncs3upload/</guid><description>Today I was trying hard to write a Lambda function, that deploys a file on multiple S3 buckets asynchronous. My problem was that the files were only uploaded every other time I ran the Lambda. Of course, this behavior suggests, that there was something wrong the Promises and/or the async/await combinations. Unfortunately, I still don&amp;rsquo;t understand the Promises completely. I once have to dive into it.
Finally, my script works. But it is unsatisfactory not understanding completely what&amp;rsquo;s going on.</description></item><item><title>CDK CodePipeline</title><link>https://baartch.github.io/posts/0005-cdkpipeline/</link><pubDate>Mon, 01 Mar 2021 11:23:33 +0100</pubDate><guid>https://baartch.github.io/posts/0005-cdkpipeline/</guid><description>It took me almost a day to figure out how to fix a problem with deploying a pipeline with CDK. The build stage was alwayis running into an error:
[Container] 2021/03/01 08:02:29 Entering phase PRE_BUILD [Container] 2021/03/01 08:02:29 Running command npm ci npm ERR! archiver not accessible from aws-cdk npm ERR! A complete log of this run can be found in: npm ERR! /root/.npm/_logs/2021-03-01T08_02_34_128Z-debug.log [Container] 2021/03/01 08:02:34 Command did not exit successfully npm ci exit status 1 [Container] 2021/03/01 08:02:34 Phase complete: PRE_BUILD State: FAILED [Container] 2021/03/01 08:02:34 Phase context status code: COMMAND_EXECUTION_ERROR Message: Error while executing command: npm ci.</description></item><item><title>Allowed function parameters in TS</title><link>https://baartch.github.io/posts/0002-allowedfunctionparametersints/</link><pubDate>Fri, 26 Feb 2021 20:24:12 +0100</pubDate><guid>https://baartch.github.io/posts/0002-allowedfunctionparametersints/</guid><description>Today I learned two things. The first is how to create a function whose parameters only allow certain values. The key thing here is to create an enum and provide it as data type to the parameter.
The second thing may seems dilettante to you, but to me this was new. I learned how to document my JS code with JSDocs.
/** * available AWS resources */ export enum resourceType { codeCommitRepository = &amp;#39;ccr&amp;#39;, codePipelinePipeline = &amp;#39;cpp&amp;#39;, iamPolicy = &amp;#39;iamp&amp;#39; } /** * This function generates a name for a resource * @param resourceType - The resource type * @param name - name of the resource */ export function generateResourceName(resourceType: resourceType, name: string): string { return `${resourceType}-${name}`; }</description></item></channel></rss>